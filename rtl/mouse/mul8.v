//--------------------------------------------------------------------------------------------
//
// Generated by X-HDL VHDL Translator - Version 2.0.0 Feb. 1, 2011
// Sat Mar 5 2022 16:56:13
//
//      Input file      : 
//      Component name  : mul8
//      Author          : 
//      Company         : 
//
//      Description     : 
//
//
//--------------------------------------------------------------------------------------------

// add8csa

//-----------------------------------------------------------------------

module mul8(		// 8 x 8 = 16 bit unsigned product multiplier
    a,
    b,
    prod
);
    input [7:0]   a;		// multiplicand
    input [7:0]   b;		// multiplier
    output [15:0] prod;		// product
    
    wire [7:0]    zero;
    wire          nc1;
    wire [7:0]    s[0:7];		// partial sums
    wire [7:0]    c[0:7];		// partial carries
    wire [7:0]    ss[0:7];		// shifted sums
    
    		// CSA stage
    add8c st0(
        .b(b[0]),
        .a(a),
        .sum_in(zero),
        .cin(zero),
        .sum_out(s[0]),
        .cout(c[0])
    );
    assign #1 ss[0] =  {1'b0, s[0][7:1]};
    assign #1 prod[0] =  s[0][0];
    
    generate
        begin : xhdl2
            genvar        I;
            for (I = 1; I <= 7; I = I + 1)
            begin : stage
                		// CSA stage
                add8c st(
                    .b(b[I]),
                    .a(a),
                    .sum_in(ss[I - 1]),
                    .cin(c[I - 1]),
                    .sum_out(s[I]),
                    .cout(c[I])
                );
                assign #1 ss[I] =  {1'b0, s[I][7:1]};
                assign #1 prod[I] =  s[I][0];
            end
        end
    endgenerate
    
    		// adder
    add8 add(
        .a(ss[7]),
        .b(c[7]),
        .cin(1'b0),
        .sum(prod[15:8]),
        .cout(nc1)
    );
    
endmodule
