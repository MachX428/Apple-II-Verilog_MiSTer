//--------------------------------------------------------------------------------------------
//
// Generated by X-HDL VHDL Translator - Version 2.0.0 Feb. 1, 2011
// Sat Mar 5 2022 16:56:13
//
//      Input file      : 
//      Component name  : add8
//      Author          : 
//      Company         : 
//
//      Description     : 
//
//
//--------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------
//  68HC05 microcontroller implementation
//  Ulrich Riedel
//  v1.0  2006.01.21  first version
//---------------------------------------------------------------------------------

// full adder stage, interface

// full adder stage, body
// circuits of fadd
// fadd
//-----------------------------------------------------------------------
module add8(		// simple 8 bit ripple carry adder
    a,
    b,
    cin,
    sum,
    cout
);
    input [7:0]  a;
    input [7:0]  b;
    input        cin;
    output [7:0] sum;
    output       cout;
    
    wire [0:6]   c;		// internal carry signals
    // duplicates entity port
    
    fadd a0(
        a[0],
        b[0],
        cin,
        sum[0],
        c[0]
    );
    generate
        begin : xhdl0
            genvar       I;
            for (I = 1; I <= 6; I = I + 1)
            begin : stage
                
                fadd as(
                    a[I],
                    b[I],
                    c[I - 1],
                    sum[I],
                    c[I]
                );
            end
        end
    endgenerate
    
    fadd a31(
        a[7],
        b[7],
        c[6],
        sum[7],
        cout
    );
    
endmodule
