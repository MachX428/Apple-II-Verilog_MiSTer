//--------------------------------------------------------------------------------------------
//
// Generated by X-HDL VHDL Translator - Version 2.0.0 Feb. 1, 2011
// Sat Feb 19 2022 14:20:52
//
//      Input file      : 
//      Component name  : hdd_rom
//      Author          : 
//      Company         : 
//
//      Description     : 
//
//
//--------------------------------------------------------------------------------------------


module hdd_rom(
    addr,
    clk,
    dout
);
    input [7:0]      addr;
    input            clk;
    output reg [7:0] dout;
    
    
    parameter [7:0]  ROM[0:255] = {8'ha9, 8'h20, 8'ha9, 8'h00, 8'ha9, 8'h03, 8'ha9, 8'h3c, 8'hd0, 8'h08, 8'h38, 8'hb0, 8'h01, 8'h18, 8'hb0, 8'h79, 8'h90, 8'h15, 8'ha9, 8'h00, 8'h8d, 8'hf2, 8'hc0, 8'ha9, 8'h70, 8'h8d, 8'hf3, 8'hc0, 8'had, 8'hf0, 8'hc0, 8'h6e, 8'hf1, 8'hc0, 8'h90, 8'h42, 8'h4c, 8'h00, 8'hc6, 8'h68, 8'h85, 8'h46, 8'h69, 8'h03, 8'ha8, 8'h68, 8'h85, 8'h47, 8'h69, 8'h00, 8'h48, 8'h98, 8'h48, 8'ha0, 8'h01, 8'hb1, 8'h46, 8'h85, 8'h42, 8'hc8, 8'hb1, 8'h46, 8'h85, 8'h45, 8'hc8, 8'hb1, 8'h46, 8'h85, 8'h46, 8'ha0, 8'h01, 8'hb1, 8'h45, 8'h85, 8'h43, 8'hc8, 8'hb1, 8'h45, 8'h85, 8'h44, 8'hc8, 8'hb1, 8'h45, 8'h48, 8'hc8, 8'hb1, 8'h45, 8'h48, 8'hc8, 8'hb1, 8'h45, 8'h85, 8'h47, 8'h68, 8'h85, 8'h46, 8'h68, 8'h85, 8'h45, 8'hc8, 8'hd0, 8'h23, 8'ha9, 8'h70, 8'h85, 8'h43, 8'ha9, 8'h00, 8'h85, 8'h44, 8'h85, 8'h46, 8'h85, 8'h47, 8'ha9, 8'h08, 8'h85, 8'h45, 8'ha9, 8'h01, 8'h85, 8'h42, 8'h20, 8'h89, 8'hc7, 8'hb0, 8'ha5, 8'h2c, 8'h61, 8'hc0, 8'h30, 8'ha0, 8'ha2, 8'h70, 8'h4c, 8'h01, 8'h08, 8'h18, 8'ha5, 8'h43, 8'h8d, 8'hf3, 8'hc0, 8'ha5, 8'h44, 8'h8d, 8'hf4, 8'hc0, 8'ha5, 8'h45, 8'h8d, 8'hf5, 8'hc0, 8'ha5, 8'h46, 8'h8d, 8'hf6, 8'hc0, 8'ha5, 8'h47, 8'h8d, 8'hf7, 8'hc0, 8'ha5, 8'h42, 8'h8d, 8'hf2, 8'hc0, 8'hc9, 8'h02, 8'hd0, 8'h03, 8'h20, 8'hde, 8'hc7, 8'had, 8'hf0, 8'hc0, 8'h48, 8'ha5, 8'h42, 8'hc9, 8'h01, 8'hd0, 8'h03, 8'h20, 8'hc1, 8'hc7, 8'h6e, 8'hf1, 8'hc0, 8'h68, 8'h60, 8'h98, 8'h48, 8'ha0, 8'h00, 8'had, 8'hf8, 8'hc0, 8'h91, 8'h44, 8'hc8, 8'hd0, 8'hf8, 8'he6, 8'h45, 8'ha0, 8'h00, 8'had, 8'hf8, 8'hc0, 8'h91, 8'h44, 8'hc8, 8'hd0, 8'hf8, 8'hc6, 8'h45, 8'h68, 8'ha8, 8'h60, 8'h98, 8'h48, 8'ha0, 8'h00, 8'hb1, 8'h44, 8'h8d, 8'hf8, 8'hc0, 8'hc8, 8'hd0, 8'hf8, 8'he6, 8'h45, 8'ha0, 8'h00, 8'hb1, 8'h44, 8'h8d, 8'hf8, 8'hc0, 8'hc8, 8'hd0, 8'hf8, 8'hc6, 8'h45, 8'h68, 8'ha8, 8'h60, 8'h00, 8'hff, 8'h7f, 8'hd7, 8'h0a};
    
    
    always @(posedge clk)
        
            dout <= ROM[addr];
    
endmodule
